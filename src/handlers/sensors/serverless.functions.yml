functions:
  insertDevice:
    handler: src/handlers/sensors/insertDevice.handler
    name: ${self:service}-${sls:stage}-sensors-insertDevice
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt SensorsTable.Arn
    environment:
      SENSORS_TABLE: !Ref SensorsTable
    events:
      - http:
          path: /sensors
          method: POST
          cors: true

  getDevice:
    handler: src/handlers/sensors/getDevice.handler
    name: ${self:service}-${sls:stage}-sensors-getDevice
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - dynamodb:Query
        Resource: !GetAtt SensorsTable.Arn
    environment:
      SENSORS_TABLE: !Ref SensorsTable
    events:
      - http:
          path: /sensors/{id}
          method: GET
          cors: true

  updateDevice:
    handler: src/handlers/sensors/updateDevice.handler
    name: ${self:service}-${sls:stage}-sensors-updateDevice
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt SensorsTable.Arn
    environment:
      SENSORS_TABLE: !Ref SensorsTable
    events:
      - http:
          path: /sensors/{id}
          method: PUT
          cors: true

  deleteDevice:
    handler: src/handlers/sensors/deleteDevice.handler
    name: ${self:service}-${sls:stage}-sensors-deleteDevice
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - dynamodb:DeleteItem
        Resource: !GetAtt SensorsTable.Arn
    environment:
      SENSORS_TABLE: !Ref SensorsTable
    events:
      - http:
          path: /sensors/{id}
          method: DELETE
          cors: true

  getLatestDeviceReadings:
    handler: src/handlers/sensors/getLatestDeviceReadings.handler
    name: ${self:service}-${sls:stage}-sensors-getLatestDeviceReadings
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - dynamodb:Query
        Resource: !GetAtt SensorsTable.Arn
    environment:
      SENSORS_TABLE: !Ref SensorsTable
    events:
      - http:
          path: /sensors/{id}/latest
          method: GET
          cors: true

  insertReading:
    handler: src/handlers/sensors/insertReading.handler
    name: ${self:service}-${sls:stage}-sensors-insertReading
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt SensorsTable.Arn
    environment:
      SENSORS_TABLE: !Ref SensorsTable
    events:
      - http:
          path: /sensors/{id}/reading
          method: POST
          cors: true

  getErrorsByDevice:
    handler: src/handlers/sensors/getErrorsByDevice.handler
    name: ${self:service}-${sls:stage}-sensors-getErrorsByDevice
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - dynamodb:Query
        Resource: 
          - !GetAtt SensorsTable.Arn
          - Fn::Join:
            - ""
            - - !GetAtt SensorsTable.Arn
              - "/index/ErrorsByDevice"
    environment:
      SENSORS_TABLE: !Ref SensorsTable
    events:
      - http:
          path: /sensors/{id}/errors
          method: GET
          cors: true

  getReadingsByError:
    handler: src/handlers/sensors/getReadingsByError.handler
    name: ${self:service}-${sls:stage}-sensors-getReadingsByError
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - dynamodb:Query
        Resource: 
          - !GetAtt SensorsTable.Arn
          - Fn::Join:
            - ""
            - - !GetAtt SensorsTable.Arn
              - "/index/ReadingsByError"


    environment:
      SENSORS_TABLE: !Ref SensorsTable
    events:
      - http:
          path: /sensors/errors/{status}
          method: GET
          cors: true
