name: Deploy IoT Device Management API

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      promote:
        description: 'Set to true to promote to production'
        required: true
        default: 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Serverless Framework
        run: npm install -g serverless@4.1.22

      - name: Install dependencies
        run: npm ci

      - name: Deploy to dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: npm run deploy-dev

      - name: Set base URL variable
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        id: set_base_url
        run: |
          base_url=$(serverless info --stage dev | grep -m 1 'https://' | awk '{print $3}' | cut -d '/' -f 1-3)
          echo "Base URL: $base_url"
          echo "::set-output name=base_url::$base_url"

      - name: Use base URL
        run: echo "The base URL is ${{ steps.set_base_url.outputs.base_url }}"

  promote-to-prod:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to production
        if: github.ref == 'refs/heads/main' && github.event.inputs.promote == 'true'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: npm run deploy-prod
