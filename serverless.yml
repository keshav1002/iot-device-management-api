service: iot-device-management
configValidationMode: error

custom:
  stage: ${file(config/stages/${sls:stage}.yml)}

build:
  esbuild:
    sourcemap: false
    bundle: true
    minify: false
    keepNames: false
    exclude:
    - '@aws-sdk'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, self:custom.stage.region}
  memorySize: ${self:custom.stage.lambda.memorySize, 128}
  timeout: ${self:custom.stage.lambda.timeout, 10}
  logRetentionInDays: ${self:custom.stage.lambda.logRetention, 1}
  deploymentBucket:
    name: com.serverless.${aws:accountId}.${aws:region}.deploys
    blockPublicAccess: true
    skipPolicySetup: true
    serverSideEncryption: AES256
    tags:
      service: ${self:service}
      stage: ${sls:stage}

functions:
  - ${file(./src/handlers/devices/deleteDevice/serverless.function.yml):functions}
  - ${file(./src/handlers/devices/getDevice/serverless.function.yml):functions}
  - ${file(./src/handlers/devices/getErrorsByDevice/serverless.function.yml):functions}
  - ${file(./src/handlers/devices/insertDevice/serverless.function.yml):functions}
  - ${file(./src/handlers/devices/updateDevice/serverless.function.yml):functions}
  - ${file(./src/handlers/readings/getLatestDeviceReadings/serverless.function.yml):functions}
  - ${file(./src/handlers/readings/getReadingsByError/serverless.function.yml):functions}
  - ${file(./src/handlers/readings/insertReading/serverless.function.yml):functions}

resources:
  - ${file(./resources/sensors/dynamodb.yml):resources}

plugins:
  - serverless-deployment-bucket
  - serverless-iam-roles-per-function
  - serverless-offline

package:
  individually: true
